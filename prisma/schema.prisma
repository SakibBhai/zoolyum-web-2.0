generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("ADMIN")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admin_users")
}

model BlogPost {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  excerpt   String?
  content   String
  imageUrl  String?  @map("image_url")
  published Boolean  @default(false)
  tags      String[]
  authorId  String?  @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([slug])
  @@index([published])
  @@index([createdAt])
  @@map("blog_posts")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  subject   String?
  message   String
  status    String   @default("NEW")
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([createdAt(sort: Desc)], map: "idx_contacts_created_at")
  @@index([email], map: "idx_contacts_email")
  @@index([status], map: "idx_contacts_status")
  @@map("contacts")
}

model ContactSettings {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String    @db.VarChar(255)
  phone              String    @db.VarChar(50)
  address            String
  workingHours       String    @map("working_hours") @db.VarChar(255)
  twitterUrl         String?   @map("twitter_url") @db.VarChar(255)
  linkedinUrl        String?   @map("linkedin_url") @db.VarChar(255)
  instagramUrl       String?   @map("instagram_url") @db.VarChar(255)
  behanceUrl         String?   @map("behance_url") @db.VarChar(255)
  enablePhoneField   Boolean   @default(true) @map("enable_phone_field")
  requirePhoneField  Boolean   @default(false) @map("require_phone_field")
  autoReplyEnabled   Boolean   @default(false) @map("auto_reply_enabled")
  autoReplyMessage   String?   @map("auto_reply_message")
  notificationEmail  String?   @map("notification_email") @db.VarChar(255)
  emailNotifications Boolean   @default(true) @map("email_notifications")
  createdAt          DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("contact_settings")
}

model Testimonial {
  id        String   @id @default(cuid())
  name      String
  company   String?
  position  String?
  content   String
  rating    Int      @default(5)
  imageUrl  String?  @map("image_url")
  featured  Boolean  @default(false)
  approved  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("testimonials")
}

model TeamMember {
  id          String   @id @default(cuid())
  name        String
  position    String?
  designation String?
  websiteTag  String?  @map("website_tag")
  bio         String?
  imageUrl    String?  @map("image_url")
  email       String?
  linkedin    String?
  twitter     String?
  status      String   @default("ACTIVE")
  order       Int      @default(0)
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("team_members")
}

model Campaign {
  id               String               @id @default(cuid())
  title            String
  slug             String               @unique
  shortDescription String?
  content          String?
  startDate        DateTime?            @map("start_date")
  endDate          DateTime?            @map("end_date")
  status           String               @default("DRAFT")
  imageUrls        String[]             @map("image_urls")
  videoUrls        String[]             @map("video_urls")
  enableForm       Boolean              @default(false) @map("enable_form")
  successMessage   String?              @map("success_message")
  redirectUrl      String?              @map("redirect_url")
  ctas             Json?                @map("ctas")
  formFields       Json?                @map("form_fields")
  createdAt        DateTime             @default(now()) @map("created_at")
  updatedAt        DateTime             @updatedAt @map("updated_at")
  
  submissions      CampaignSubmission[]

  @@map("campaigns")
}

model CampaignSubmission {
  id          String   @id @default(cuid())
  campaignId  String   @map("campaign_id")
  data        Json
  submittedAt DateTime @default(now()) @map("submitted_at")
  ipAddress   String?  @map("ip_address")
  userAgent   String?  @map("user_agent")
  
  campaign    Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  
  @@index([campaignId])
  @@index([submittedAt])
  @@map("campaign_submissions")
}

model Project {
  id           String   @id @default(cuid())
  title        String
  slug         String   @unique
  description  String
  content      String?
  category     String
  imageUrl     String?  @map("image_url")
  heroImageUrl String?  @map("hero_image_url")
  year         String?
  client       String?
  duration     String?
  services     String[]
  overview     String?
  challenge    String?
  solution     String?
  process      Json?
  gallery      Json?
  results      Json?
  testimonial  Json?
  technologies String[] @default([])
  projectUrl   String?  @map("project_url")
  githubUrl    String?  @map("github_url")
  published    Boolean  @default(false)
  featured     Boolean  @default(false)
  order        Int      @default(0)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@index([slug])
  @@index([published])
  @@index([featured])
  @@index([category])
  @@map("projects")
}

model HomepageHero {
  id          String   @id @default(cuid())
  title       String
  subtitle    String?
  description String
  primaryCta  Json?    @map("primary_cta") // {text: string, url: string}
  secondaryCta Json?   @map("secondary_cta") // {text: string, url: string}
  backgroundImage String? @map("background_image")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("homepage_hero")
}

model HomepageAbout {
  id          String   @id @default(cuid())
  title       String
  subtitle    String?
  description String
  image       String?
  ctaText     String?  @map("cta_text")
  ctaUrl      String?  @map("cta_url")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("homepage_about")
}

model HomepageStatistic {
  id        String   @id @default(cuid())
  label     String
  value     String
  suffix    String?  // e.g., "+", "%", etc.
  order     Int      @default(0)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("homepage_statistics")
}

model HomepageService {
  id          String   @id @default(cuid())
  title       String
  description String
  icon        String?  // Icon name or URL
  order       Int      @default(0)
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("homepage_services")
}

model HomepageSection {
  id          String   @id @default(cuid())
  sectionType String   @map("section_type") // "expertise", "featured_work", "team", "testimonials", "cta"
  title       String
  subtitle    String?
  description String?
  ctaText     String?  @map("cta_text")
  ctaUrl      String?  @map("cta_url")
  isActive    Boolean  @default(true) @map("is_active")
  order       Int      @default(0)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("homepage_sections")
}

model SiteSettings {
  id              String   @id @default(cuid())
  siteName        String   @map("site_name")
  siteDescription String?  @map("site_description")
  logoUrl         String?  @map("logo_url")
  faviconUrl      String?  @map("favicon_url")
  primaryColor    String?  @map("primary_color")
  secondaryColor  String?  @map("secondary_color")
  footerText      String?  @map("footer_text")
  socialLinks     Json?    @map("social_links") // {facebook: string, twitter: string, etc.}
  seoTitle        String?  @map("seo_title")
  seoDescription  String?  @map("seo_description")
  seoKeywords     String?  @map("seo_keywords")
  googleAnalytics String?  @map("google_analytics")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("site_settings")
}

model NavigationMenu {
  id        String   @id @default(cuid())
  label     String
  url       String
  order     Int      @default(0)
  isActive  Boolean  @default(true) @map("is_active")
  parentId  String?  @map("parent_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  parent   NavigationMenu?  @relation("NavigationHierarchy", fields: [parentId], references: [id])
  children NavigationMenu[] @relation("NavigationHierarchy")

  @@map("navigation_menu")
}
