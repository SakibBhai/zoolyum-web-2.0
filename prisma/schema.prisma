generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("ADMIN")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admin_users")
}

model BlogPost {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  excerpt   String?
  content   String
  imageUrl  String?  @map("image_url")
  published Boolean  @default(false)
  tags      String[]
  authorId  String?  @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([slug])
  @@index([published])
  @@index([createdAt])
  @@map("blog_posts")
}

model Contact {
  id              String   @id @default(cuid())
  name            String
  email           String
  phone           String?
  countryCode     String?  @default("+880") @map("country_code")
  company         String?
  businessName    String?  @map("business_name")
  businessWebsite String?  @map("business_website")
  services        String[] @default([])
  message         String
  subject         String?
  status          String   @default("NEW")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  ipAddress       String?  @map("ip_address")
  userAgent       String?  @map("user_agent")

  @@index([createdAt(sort: Desc)], map: "idx_contacts_created_at")
  @@index([email], map: "idx_contacts_email")
  @@index([status], map: "idx_contacts_status")
  @@index([countryCode], map: "idx_contacts_country_code")
  @@map("contacts")
}

model ContactSettings {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String    @db.VarChar(255)
  phone              String    @db.VarChar(50)
  address            String
  workingHours       String    @map("working_hours") @db.VarChar(255)
  twitterUrl         String?   @map("twitter_url") @db.VarChar(255)
  linkedinUrl        String?   @map("linkedin_url") @db.VarChar(255)
  instagramUrl       String?   @map("instagram_url") @db.VarChar(255)
  behanceUrl         String?   @map("behance_url") @db.VarChar(255)
  enablePhoneField   Boolean   @default(true) @map("enable_phone_field")
  requirePhoneField  Boolean   @default(false) @map("require_phone_field")
  autoReplyEnabled   Boolean   @default(false) @map("auto_reply_enabled")
  autoReplyMessage   String?   @map("auto_reply_message")
  notificationEmail  String?   @map("notification_email") @db.VarChar(255)
  emailNotifications Boolean   @default(true) @map("email_notifications")
  createdAt          DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("contact_settings")
}

model Testimonial {
  id        String   @id @default(cuid())
  name      String
  company   String?
  position  String?
  content   String
  rating    Int      @default(5)
  imageUrl  String?  @map("image_url")
  featured  Boolean  @default(false)
  approved  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([approved], map: "idx_testimonials_approved")
  @@index([approved, featured], map: "idx_testimonials_approved_featured")
  @@index([createdAt(sort: Desc)], map: "idx_testimonials_created_at")
  @@index([featured], map: "idx_testimonials_featured")
  @@index([rating], map: "idx_testimonials_rating")
  @@map("testimonials")
}

model TeamMember {
  id          String   @id
  name        String
  position    String?
  designation String?
  website_tag String?
  bio         String?
  image_url   String?
  email       String?
  linkedin    String?
  twitter     String?
  status      String   @default("ACTIVE")
  order       Int      @default(0)
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("team_members")
}

model Campaign {
  id               String               @id @default(cuid())
  title            String
  slug             String               @unique
  shortDescription String?
  content          String?
  startDate        DateTime?            @map("start_date")
  endDate          DateTime?            @map("end_date")
  status           String               @default("DRAFT")
  imageUrls        String[]             @map("image_urls")
  videoUrls        String[]             @map("video_urls")
  enableForm       Boolean              @default(false) @map("enable_form")
  successMessage   String?              @map("success_message")
  redirectUrl      String?              @map("redirect_url")
  ctas             Json?                @map("ctas")
  formFields       Json?                @map("form_fields")
  createdAt        DateTime             @default(now()) @map("created_at")
  updatedAt        DateTime             @updatedAt @map("updated_at")
  submissions      CampaignSubmission[]

  @@map("campaigns")
}

model CampaignSubmission {
  id          String   @id @default(cuid())
  campaignId  String   @map("campaign_id")
  data        Json
  submittedAt DateTime @default(now()) @map("submitted_at")
  ipAddress   String?  @map("ip_address")
  userAgent   String?  @map("user_agent")
  campaign    Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@index([campaignId])
  @@index([submittedAt])
  @@map("campaign_submissions")
}

model Project {
  id             String   @id
  title          String
  slug           String   @unique
  description    String
  content        String?
  category       String
  image_url      String?
  hero_image_url String?
  year           String?
  client         String?
  duration       String?
  services       String[]
  overview       String?
  challenge      String?
  solution       String?
  process        Json?
  gallery        Json?
  results        Json?
  testimonial    Json?
  technologies   String[] @default([])
  project_url    String?
  github_url     String?
  published      Boolean  @default(false)
  featured       Boolean  @default(false)
  order          Int      @default(0)
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@index([category])
  @@index([featured])
  @@index([published])
  @@index([slug])
  @@map("projects")
}

model consultations {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  full_name          String    @db.VarChar(255)
  email              String    @db.VarChar(255)
  company_name       String?   @db.VarChar(255)
  website_url        String?   @db.VarChar(500)
  role               String?   @db.VarChar(100)
  main_challenge     String    @db.VarChar(100)
  other_challenge    String?
  session_goal       String?
  preferred_datetime DateTime? @db.Timestamptz(6)
  additional_notes   String?
  consultation_type  String?   @default("brand_strategy") @db.VarChar(50)
  status             String?   @default("PENDING") @db.VarChar(20)
  ip_address         String?   @db.Inet
  user_agent         String?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at(sort: Desc)], map: "idx_consultations_created_at")
  @@index([preferred_datetime], map: "idx_consultations_datetime")
  @@index([email], map: "idx_consultations_email")
  @@index([status], map: "idx_consultations_status")
  @@index([consultation_type], map: "idx_consultations_type")
}

model homepage_about {
  id          String   @id
  title       String
  subtitle    String?
  description String
  image       String?
  cta_text    String?
  cta_url     String?
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime
}

model homepage_hero {
  id               String   @id
  title            String
  subtitle         String?
  description      String
  primary_cta      Json?
  secondary_cta    Json?
  background_image String?
  is_active        Boolean  @default(true)
  created_at       DateTime @default(now())
  updated_at       DateTime
}

model homepage_sections {
  id           String   @id
  section_type String
  title        String
  subtitle     String?
  description  String?
  cta_text     String?
  cta_url      String?
  is_active    Boolean  @default(true)
  order        Int      @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime
}

model homepage_services {
  id          String   @id
  title       String
  description String
  icon        String?
  order       Int      @default(0)
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime
}

model homepage_statistics {
  id         String   @id
  label      String
  value      String
  suffix     String?
  order      Int      @default(0)
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime
}

model navigation_menu {
  id                    String            @id
  label                 String
  url                   String
  order                 Int               @default(0)
  is_active             Boolean           @default(true)
  parent_id             String?
  created_at            DateTime          @default(now())
  updated_at            DateTime
  navigation_menu       navigation_menu?  @relation("navigation_menuTonavigation_menu", fields: [parent_id], references: [id])
  other_navigation_menu navigation_menu[] @relation("navigation_menuTonavigation_menu")
}

model site_settings {
  id               String   @id
  site_name        String
  site_description String?
  logo_url         String?
  favicon_url      String?
  primary_color    String?
  secondary_color  String?
  footer_text      String?
  social_links     Json?
  seo_title        String?
  seo_description  String?
  seo_keywords     String?
  google_analytics String?
  created_at       DateTime @default(now())
  updated_at       DateTime
}

model Job {
  id                  String         @id @default(cuid())
  title               String
  slug                String         @unique
  department          String
  location            String
  jobType             String         @map("job_type")
  employmentType      String         @map("employment_type")
  salaryMin           Int?           @map("salary_min")
  salaryMax           Int?           @map("salary_max")
  salaryCurrency      String?        @default("USD") @map("salary_currency")
  description         String
  requirements        String
  responsibilities    String
  perks               String?
  skills              String[]       @default([])
  experience          String?
  published           Boolean        @default(false)
  featured            Boolean        @default(false)
  applicationDeadline DateTime?      @map("application_deadline")
  imageUrl            String?        @map("image_url")
  allowCvSubmission   Boolean        @default(true) @map("allow_cv_submission")
  createdAt           DateTime       @default(now()) @map("created_at")
  updatedAt           DateTime       @updatedAt @map("updated_at")
  
  applications        JobApplication[]
  
  @@index([slug])
  @@index([published])
  @@index([department])
  @@index([jobType])
  @@index([featured])
  @@index([createdAt])
  @@map("jobs")
}

model JobApplication {
  id          String   @id @default(cuid())
  jobId       String   @map("job_id")
  firstName   String   @map("first_name")
  lastName    String   @map("last_name")
  email       String
  phone       String?
  resumeUrl   String?  @map("resume_url")
  coverLetter String?  @map("cover_letter")
  // added fields
  portfolioUrl      String?  @map("portfolio_url")
  linkedinUrl       String?  @map("linkedin_url")
  experience        String?
  availability      String?
  salaryExpectation Int?     @map("salary_expectation")
  ipAddress         String?  @map("ip_address")
  userAgent         String?  @map("user_agent")
  status      String   @default("pending")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  job         Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  
  @@index([jobId])
  @@index([email])
  @@index([status])
  @@index([createdAt])
  @@map("job_applications")
}
